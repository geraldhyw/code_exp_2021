{"ast":null,"code":"var _jsxFileName = \"/Users/gerald/Desktop/Gerald/Interests/Hackathon/CODE_EXP 2021/code_exp_2021/screens/register.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\nvar registerSchema = yup.object({\n  name: yup.string().required(),\n  phone: yup.string().required().min(8).max(8),\n  postal: yup.string().required().min(6).max(6)\n});\nexport default function RegisterPage(props) {\n  var _this = this;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      phone: \"\",\n      postal: \"\"\n    },\n    validationSchema: registerSchema,\n    onSubmit: function onSubmit() {\n      return props.setLoggedIn(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        touched = _ref.touched,\n        errors = _ref.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"Name\",\n      onChangeText: handleChange(\"name\"),\n      value: values.name,\n      onBlur: handleBlur(\"name\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, touched.name && errors.name), React.createElement(TextInput, {\n      placeholder: \"Phone\",\n      onChangeText: handleChange(\"phone\"),\n      value: values.phone,\n      keyboardType: \"numeric\",\n      onBlur: handleBlur(\"phone\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, touched.phone && errors.phone), React.createElement(TextInput, {\n      placeholder: \"Postal Code\",\n      onChangeText: handleChange(\"postal\"),\n      value: values.postal,\n      keyboardType: \"numeric\",\n      onBlur: handleBlur(\"postal\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, touched.postal && errors.postal), React.createElement(Button, {\n      title: \"Register\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/gerald/Desktop/Gerald/Interests/Hackathon/CODE_EXP 2021/code_exp_2021/screens/register.js"],"names":["React","Formik","yup","registerSchema","object","name","string","required","phone","min","max","postal","RegisterPage","props","styles","container","setLoggedIn","handleChange","handleBlur","handleSubmit","values","touched","errors","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\n\n// can do login page + authentication page if got time\n\nconst registerSchema = yup.object({\n  name: yup.string()\n      .required(),\n  phone: yup.string()\n      .required()\n      .min(8)\n      .max(8),\n  postal: yup.string()\n      .required()\n      .min(6)\n      .max(6)\n})\n\n\nexport default function RegisterPage(props) {\n  return (\n    <View style={styles.container}>\n      <Formik\n        initialValues={{name: \"\", phone: \"\", postal: \"\"}}\n        validationSchema={registerSchema}\n        onSubmit={\n          // store data in db \n          () => props.setLoggedIn(true)\n        }\n      >\n        {({ handleChange, handleBlur, handleSubmit, values, touched, errors }) => (\n          <View>\n            {/* Name */}\n            <TextInput \n              placeholder=\"Name\"\n              onChangeText={handleChange(\"name\")}\n              value={values.name}\n              onBlur={handleBlur(\"name\")}\n            />\n            <Text>{touched.name && errors.name}</Text>\n\n            {/* Phone */}\n            <TextInput \n              placeholder=\"Phone\"\n              onChangeText={handleChange(\"phone\")}\n              value={values.phone}\n              keyboardType=\"numeric\"\n              onBlur={handleBlur(\"phone\")}\n            />\n            <Text>{touched.phone && errors.phone}</Text>\n\n            {/* Postal Code */}\n            <TextInput \n              placeholder=\"Postal Code\"\n              onChangeText={handleChange(\"postal\")}\n              value={values.postal}\n              keyboardType=\"numeric\"\n              onBlur={handleBlur(\"postal\")}\n            />\n            <Text>{touched.postal && errors.postal}</Text>\n\n            <Button title=\"Register\" onPress={handleSubmit}/>\n          </View>\n        )}\n\n      </Formik>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}