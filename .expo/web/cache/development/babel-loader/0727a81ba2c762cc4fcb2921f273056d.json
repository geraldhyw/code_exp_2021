{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/gerald/Desktop/Gerald/Interests/Hackathon/CODE_EXP 2021/code_exp_2021/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RegisterPage from \"./screens/register\";\nimport BulletinPage from \"./screens/bulletin\";\nimport StackNav from \"./routes/stackNavigator\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  return isLoggedIn ? React.createElement(StackNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }\n  }) : React.createElement(RegisterPage, {\n    setLoggedIn: setLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  });\n}","map":{"version":3,"sources":["/Users/gerald/Desktop/Gerald/Interests/Hackathon/CODE_EXP 2021/code_exp_2021/App.js"],"names":["React","useState","RegisterPage","BulletinPage","StackNav","App","isLoggedIn","setLoggedIn"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOK,UAAP;AAAA,MAAmBC,WAAnB;;AAEA,SAAOD,UAAU,GAChB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAGhB,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD;AAID","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport RegisterPage from \"./screens/register\";\nimport BulletinPage from \"./screens/bulletin\";\nimport StackNav from './routes/stackNavigator';\n\nexport default function App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n\n  return isLoggedIn ? \n  (<StackNav></StackNav>)\n  :\n  (<RegisterPage setLoggedIn={setLoggedIn}></RegisterPage>)\n}\n"]},"metadata":{},"sourceType":"module"}