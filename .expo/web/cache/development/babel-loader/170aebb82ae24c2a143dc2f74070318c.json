{"ast":null,"code":"var _jsxFileName = \"/Users/gerald/Desktop/Gerald/Interests/Hackathon/CODE_EXP 2021/code_exp_2021/screens/createRequest.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\nimport { addBulletinList, getBulletinList } from \"../shared/bulletinList\";\nimport { addRequestList } from \"../shared/requestList\";\nexport default function CreateRequest(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      params = _ref.params;\n  var name = params.name,\n      phone = params.phone,\n      postal = params.postal,\n      unit = params.unit;\n\n  function createRequestObject(favorDescription) {\n    var randomId = Math.floor(Math.random() * 10000);\n    return {\n      id: randomId,\n      name: name,\n      phone: phone,\n      postal: postal,\n      unit: unit,\n      items: [favorDescription]\n    };\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      title: \"\",\n      quantity: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      var favor = createRequestObject(values);\n      console.log(favor);\n      addBulletinList(favor);\n      addRequestList(favor);\n      console.log(getBulletinList());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        touched = _ref2.touched,\n        errors = _ref2.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Description\"), React.createElement(TextInput, {\n      placeholder: \"Description\",\n      onChangeText: handleChange(\"title\"),\n      value: values.title,\n      onBlur: handleBlur(\"title\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, touched.title && errors.title), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Quantity\"), React.createElement(TextInput, {\n      placeholder: \"Quantity\",\n      onChangeText: handleChange(\"quantity\"),\n      value: values.quantity,\n      keyboardType: \"numeric\",\n      onBlur: handleBlur(\"quantity\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, touched.quantity && errors.quantity), React.createElement(Button, {\n      title: \"Create Favor\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/gerald/Desktop/Gerald/Interests/Hackathon/CODE_EXP 2021/code_exp_2021/screens/createRequest.js"],"names":["React","Formik","yup","addBulletinList","getBulletinList","addRequestList","CreateRequest","navigation","route","params","name","phone","postal","unit","createRequestObject","favorDescription","randomId","Math","floor","random","id","items","styles","container","title","quantity","values","favor","console","log","handleChange","handleBlur","handleSubmit","touched","errors","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput, Button } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\nimport { addBulletinList, getBulletinList } from '../shared/bulletinList';\nimport { addRequestList } from '../shared/requestList';\n\nexport default function CreateRequest({ navigation, route, params }) {\n  const {name, phone, postal, unit} = params;\n\n  function createRequestObject(favorDescription) {\n    let randomId = Math.floor(Math.random() * 10000);\n\n    return {\n      id: randomId,\n      name: name,\n      phone: phone,\n      postal: postal,\n      unit: unit,\n      items: [favorDescription]\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Formik\n        initialValues={{title: \"\", quantity: \"\"}}\n        // validationSchema={registerSchema}\n        onSubmit={\n          // store data in db \n          (values) => { \n            let favor = createRequestObject(values);\n            console.log(favor);\n            addBulletinList(favor);\n            addRequestList(favor);\n            console.log(getBulletinList());\n          }\n        }\n      >\n        {({ handleChange, handleBlur, handleSubmit, values, touched, errors }) => (\n          <View>\n            {/* Description */}\n            <Text>Description</Text>\n            <TextInput \n              placeholder=\"Description\"\n              onChangeText={handleChange(\"title\")}\n              value={values.title}\n              onBlur={handleBlur(\"title\")}\n            />\n            <Text>{touched.title && errors.title}</Text>\n\n            {/* Quantity */}\n            <Text>Quantity</Text>\n            <TextInput \n              placeholder=\"Quantity\"\n              onChangeText={handleChange(\"quantity\")}\n              value={values.quantity}\n              keyboardType=\"numeric\"\n              onBlur={handleBlur(\"quantity\")}\n            />\n            <Text>{touched.quantity && errors.quantity}</Text>\n\n            <Button title=\"Create Favor\" onPress={handleSubmit}/>\n          </View>\n        )}\n\n      </Formik>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}